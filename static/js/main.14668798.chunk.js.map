{"version":3,"sources":["Components/Visualization2/index.jsx","Components/Map/index.jsx","Components/MapsDescription/index.jsx","Components/ColorLegend/index.jsx","Components/MapsVisualisation/index.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["Visualization2","props","state","objektart","unfallschwere","strassenart","unfalltyp","data","handleChange","bind","event","name","target","value","this","setState","d3","path","then","valueline","svgId","canvHeight","canvWidth","margin","width","height","g","x","d","i","xScale","Date","y","yScale","curve","domain","rangeRound","xAxis","tickFormat","select","call","yAxis","append","attr","left","style","text","tooltip","remove","selectedObjektart","filter","row","theData","Object","values","slice","on","html","pageX","pageY","selectedData","theData2","className","id","onSubmit","handleSubmit","size","onChange","align","transform","top","href","rel","Component","defaultProps","process","right","bottom","Map","country","year","cantonMap","scale","color","faux","ReactFauxDOM","createElement","projection","rotate","center","translate","precision","pathGenerator","cantons","topojson","objects","selectAll","features","enter","val","showTooltip","properties","Number","Math","round","toLocaleString","hideTooltip","toReact","MapsDescription","ColorLegend","cols","Array","fill","map","colorStep","min","max","invert","col","key","stroke","strokeWidth","PureComponent","MapsVisualisation","selectedDataset","loading","loadDataset","paths","topo","scales","colors","domains","length","Kanton","years","defaultValue","relative","absolute","amount","range","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.14668798.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './style.css'\n\nclass Visualization2 extends Component {\n  static defaultProps = {\n    svgId: 'canvas',\n    path: `${process.env.PUBLIC_URL}/data_unfaelle_bereinigt.csv`,\n    canvHeight: 690,\n    canvWidth: 1110,\n    margin: { top: 70, right: 15, bottom: 0, left: 60 },\n    height: 620 - 70 - 0,\n    width: 1100 - 50 - 15,\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      objektart: \"Personenwagen\",\n      unfallschwere: \"Unfall mit leicht Verletzten\",\n      strassenart: \"Hauptstrasse\",\n      unfalltyp: \"Fussgängerunfall\",\n      data: null,\n    }\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  componentDidMount() {\n    d3.csv(this.props.path)\n      .then(data => {\n        this.setState({ data: data }) // now this.state.data can be used in the render() function;\n      })\n  }\n\n  render() {\n    const { svgId, canvHeight, canvWidth, margin, width, height } = this.props\n    const { data } = this.state\n\n    if (null !== data) {\n\n      // select chart-area\n      const g = d3.select(\"#chart-area\")\n\n      // define the line\n      var valueline = d3.line()\n        .x((d, i) => { return xScale(new Date('' + (1992 + i))) })\n        .y((d, i) => { return yScale(d) })\n        .curve(d3.curveCatmullRom)\n\n      // create scale for x direction\n      const xScale = d3.scaleTime()\n        .domain([new Date(\"1992\"), new Date(\"2016\")])\n        .rangeRound([2, width])\n\n      // create scale for y direction\n      let yScale\n      if (this.state.objektart === 'Personenwagen') {\n        yScale = d3.scaleLinear()\n          .domain([0, 3000])\n          .rangeRound([height - 2, 0])\n      } else if (this.state.objektart === 'Fahrrad' || this.state.objektart === 'FussgängerIn') {\n        yScale = d3.scaleLinear()\n          .domain([0, 700])\n          .rangeRound([height - 2, 0])\n      } else if (this.state.objektart === 'Sachentransportfahrzeuge' || this.state.objektart === 'Motorrad über 125 ccm' || this.state.objektart === 'Motorrad bis 125 ccm' || this.state.objektart === 'Motorfahrrad') {\n        yScale = d3.scaleLinear()\n          .domain([0, 400])\n          .rangeRound([height - 2, 0])\n      } else {\n        yScale = d3.scaleLinear()\n          .domain([0, 150])\n          .rangeRound([height - 2, 0])\n      }\n\n      // create xAxis\n      const xAxis = d3.axisBottom(xScale).tickFormat(d3.timeFormat(\"%Y\"))\n      g.select(\"#axisX\").call(xAxis)\n\n      // create yAxis\n      const yAxis = d3.axisLeft(yScale)\n      g.select(\"#axisY\").call(yAxis)\n\n      // Add label for yAxis\n      g.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"x\", 0 - (height / 2))\n        .attr(\"y\", 0 - margin.left)\n        .attr(\"class\", \"label\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"font-family\", \"sans-serif\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Anzahl Unfälle \")\n\n      // Add label for xAxis\n      g.append(\"text\")\n        .attr(\"x\", width / 2)\n        .attr(\"y\", height + 25)\n        .attr(\"class\", \"label\")\n        .attr(\"dy\", \"1em\")\n        .attr(\"font-family\", \"sans-serif\")\n        .style(\"text-anchor\", \"middle\")\n        .text(\"Jahre\")\n\n      // Define container for tooltip\n      const tooltip = d3.select(\"body\").append(\"div\")\n        .attr(\"class\", \"tooltip invisible\")\n\n      // Change used data depending on selected Objektart\n      d3.selectAll(\"path.lines\").remove();\n      let selectedObjektart = data.filter(row => row['Objektart'] === this.state.objektart)\n      for (let i in selectedObjektart) {\n        let theData = Object.values(selectedObjektart[i]).slice(0, 2016 - 1992 + 1)\n  \n        // Add valueline paths.\n        g.append(\"path\")\n          .data([theData])\n          .attr(\"class\", \"lines\")\n          .attr(\"stroke\", \"#E1E1E1\")\n          .attr(\"stroke-width\", \"1.0px\")\n          .attr(\"fill\", \"none\")\n          .attr(\"d\", valueline)\n          .on(\"mouseover\", function (d) {\n            tooltip.html(selectedObjektart[i]['Objektart'] + \", \" + selectedObjektart[i]['Unfallschwere'] + \", <br/>\" + selectedObjektart[i]['Strassenart'] + \", \" + selectedObjektart[i]['Unfalltyp'])\n              .style(\"left\", (d3.event.pageX - 2) + \"px\")\n              .style(\"top\", (d3.event.pageY - 50) + \"px\")\n            return tooltip.attr(\"class\", \"tooltip\");\n          })\n          .on(\"mouseout\", function (d) {\n            return tooltip.attr(\"class\", \"tooltip invisible\");\n          });\n      };\n\n      // Add the path for the selected data.\n      d3.select(\"#selected\").remove();\n      let selectedData = data.filter(row => row['Objektart'] === this.state.objektart && row['Unfallschwere'] === this.state.unfallschwere && row['Strassenart'] === this.state.strassenart && row['Unfalltyp'] === this.state.unfalltyp)\n      let theData2 = Object.values(selectedData[0]).slice(0, 2016 - 1992 + 1)\n\n      g.append(\"path\")\n      .data([theData2])\n      .attr(\"class\", \"lines\")\n      .attr(\"id\", \"selected\")\n      .attr(\"stroke\", \"#4889BF\")\n      .attr(\"stroke-width\", \"2.0px\")\n      .attr(\"fill\", \"none\")\n      .attr(\"d\", valueline)\n      .on(\"mouseover\", function(d) {\t\n        tooltip.html(selectedObjektart[0]['Objektart'] +\", \"+ selectedObjektart[0]['Unfallschwere'] +\", <br/>\"  + selectedObjektart[0]['Strassenart'] +\", \"+ selectedObjektart[0]['Unfalltyp'])\t\n              .style(\"left\", (d3.event.pageX - 2) + \"px\")\n              .style(\"top\", (d3.event.pageY - 50) + \"px\")\n        return tooltip.attr(\"class\", \"tooltip\");})\t\t\t\t\t\n      .on(\"mouseout\", function(d) {\t\t\n        return tooltip.attr(\"class\", \"tooltip invisible\");});\n  }\n\n\n\n    return (\n      <div className=\"container\" id=\"visualization2\">\n\n        <h2>Art der Unfälle</h2>\n\n        <div className=\"selection-area\">\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"selection-group\">\n              <h3 className=\"selection-group-title\">Unfallverursacher</h3>\n              <select size=\"3\" className=\"selection-items\" id=\"Objektart\" name=\"objektart\" value={this.state.objektart} onChange={this.handleChange} >\n                <option className=\"item\" id=\"Personenwagen\">Personenwagen</option>\n                <option className=\"item\" id=\"Personentransportfahrzeuge\">Personentransportfahrzeuge</option>\n                <option className=\"item\" id=\"Sachentransportfahrzeuge\">Sachentransportfahrzeuge</option>\n                <option className=\"item\" id=\"Kleinmotorrad\">Kleinmotorrad</option>\n                <option className=\"item\" id=\"Motorrad bis 125 ccm\">Motorrad bis 125 ccm</option>\n                <option className=\"item\" id=\"Motorrad über 125 ccm\">Motorrad über 125 ccm</option>\n                <option className=\"item\" id=\"Fahrrad\">Fahrrad</option>\n                <option className=\"item\" id=\"Motorfahrrad\">Motorfahrrad</option>\n                <option className=\"item\" id=\"FussgängerIn\">FussgängerIn</option>\n              </select>\n            </div>\n            <div className=\"selection-group\">\n              <h3 className=\"selection-group-title\">Unfallschwere</h3>\n              <select size=\"3\" className=\"selection-items\" id=\"Unfallschwere\" name=\"unfallschwere\" value={this.state.unfallschwere} onChange={this.handleChange} >\n                <option className=\"item\" id=\"Unfall mit leicht Verletzten\">Unfall mit leicht Verletzten</option>\n                <option className=\"item\" id=\"Unfall mit schwer Verletzten\">Unfall mit schwer Verletzten</option>\n                <option className=\"item\" id=\"Unfall mit Getöteten\">Unfall mit Getöteten</option>\n              </select>\n            </div>\n            <div className=\"selection-group\">\n              <h3 className=\"selection-group-title\">Strassenart</h3>\n              <select size=\"3\" className=\"selection-items\" id=\"Strassenart\" name=\"strassenart\" value={this.state.strassenart} onChange={this.handleChange} >\n                <option className=\"item\" id=\"Autobahn\">Autobahn</option>\n                <option className=\"item\" id=\"Autostrasse\">Autostrasse</option>\n                <option className=\"item\" id=\"Hauptstrasse\">Hauptstrasse</option>\n                <option className=\"item\" id=\"Nebenstrasse\">Nebenstrasse</option>\n              </select>\n            </div>\n            <div className=\"selection-group\">\n              <h3 className=\"selection-group-title\">Unfalltyp</h3>\n              <select size=\"3\" className=\"selection-items\" id=\"Unfalltyp\" name=\"unfalltyp\" value={this.state.unfalltyp} onChange={this.handleChange} >\n                <option className=\"item\" id=\"Fussgängerunfall\">Fussgängerunfall</option>\n                <option className=\"item\" id=\"Schleuder-, Selbstunfall\">Schleuder-, Selbstunfall</option>\n                <option className=\"item\" id=\"Beim Kreuzen (in Längsrichtung)\">Beim Kreuzen (in Längsrichtung)</option>\n                <option className=\"item\" id=\"Ueberholunfall\">Ueberholunfall</option>\n                <option className=\"item\" id=\"Auffahrunfall\">Auffahrunfall</option>\n                <option className=\"item\" id=\"Beim Vorbeifahren, Fahrstreifenwechsel\">Beim Vorbeifahren, Fahrstreifenwechsel</option>\n                <option className=\"item\" id=\"Beim Richtungswechsel (mit Abbiegen)\">Beim Richtungswechsel (mit Abbiegen)</option>\n                <option className=\"item\" id=\"Beim Queren (ohne Abbiegen)\">Beim Queren (ohne Abbiegen)</option>\n                <option className=\"item\" id=\"Tierunfall\">Tierunfall</option>\n              </select>\n            </div>\n          </form>\n        </div>\n        <svg id={svgId} width={canvWidth} height={canvHeight} style={{ align: 'center' }}>\n          <g id=\"chart-area\" transform={`translate(${margin.left},${margin.top})`}>\n            <g id=\"axisX\" className=\"axis\" transform={`translate(0,${height})`} />\n            <g id=\"axisY\" className=\"axis\" />\n          </g>\n        </svg>\n        <div className=\"description\">\n          <p>\n            Hier können die Unfälle nach Unfallverursacher, Unfallschwere, Strassenart und Unfalltyp gefiltert werden.\n            Je nach ausgewähltem Unfallverursacher passt sich die Skala an, da sich die Anzahl Unfälle für die verschiedenen Unfallverursacher stark unterscheiden.\n            Die ausgegrauten Linien repräsentieren alle Kombiniationsmöglichkeiten pro Unfallverursacher.\n            Die blaue Linie repräsentiert die Auswahl, welcher der Benutzer mittels der Filter getroffen hat.\n            Beim hovern über die Linien erscheint ein Tooltip mit den Daten zur jeweiligen Linie.\n          </p>\n          <h4>Quelle</h4>\n          <ul className=\"sources\">\n            <li><a href=\"https://www.bfs.admin.ch/bfs/de/home/statistiken/kataloge-datenbanken/daten.assetdetail.5267255.html\" target=\"_blank\" rel=\"noopener noreferrer\">Strassenverkehrsunfälle: Mutmassliche Mängel und Einflüsse nach Mangel oder Einfluss, Unfallschwere, Unfalltyp, Strassenart und Objektart</a>, Bundesamt für Statistik, abgerufen am 22. Mai 2018</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Visualization2\n","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport * as topojson from 'topojson'\nimport ReactFauxDOM from 'react-faux-dom'\nimport './style.css'\n\n\nclass Map extends Component {\n    static defaultProps = {\n        margin: { top: 0, right: 0, bottom: 0, left: 0 },\n    }\n\n    showTooltip(data) {\n        const tooltip = d3.select('#mapTooltip')\n        tooltip.html(data)\n            .style('left', `${d3.event.pageX - 2}px`)\n            .style('top', `${d3.event.pageY - 35}px`)\n            .attr('class', 'tooltip')\n    }\n\n    hideTooltip() {\n        d3.select('#mapTooltip').attr('class', 'tooltip invisible')\n    }\n\n    render() {\n        const { id, width, height } = this.props\n        const { country, margin, year, data, cantonMap, scale, color } = this.props\n\n        const faux = ReactFauxDOM.createElement('g')\n        // const faux = this.props.connectFauxDOM('g', 'map')\n\n        const g = d3.select(faux)\n        g.attr('transform', `translate(${margin.left},${margin.top})`)\n\n        const projection = d3.geoAlbers()\n            .rotate([0, 0])\n            .center([8.3, 46.8])\n            .scale(2500)\n            .translate([width / 2, height / 2])\n            .precision(.1)\n\n        const pathGenerator = d3.geoPath().projection(projection)\n        const cantons = topojson.feature(country, country.objects.cantons)\n\n        if (null != data) {\n            g.selectAll(\"path.canton\")\n                .data(cantons.features)\n                .enter()\n                .append(\"path\")\n                .attr(\"class\", \"canton\")\n                .attr(\"d\", pathGenerator)\n                .style('fill', (d, i) => {\n                    //debugger\n                    const val = data[cantonMap[d.id]][year]\n                    return color(scale(val))\n                })\n                .on('mouseover', d => {\n                    this.showTooltip(`${d.properties.name}: ${Number(Math.round(data[cantonMap[d.id]][year] * 10) / 10).toLocaleString()}`)\n                })\n                .on('mouseleave', () => {\n                    this.hideTooltip()\n                })\n        }\n\n        // g.append(\"path.cantonBoundary\")\n        //     .datum(topojson.mesh(country, country.objects.cantons))\n        //     .attr(\"class\", \"cantonBoundary\")\n        //     .attr(\"d\", pathGenerator)\n\n        // g.selectAll(\"text\")\n        //     .data(cantons.features)\n        //     .enter().append(\"text\")\n        //     .attr(\"transform\", d => `translate(${pathGenerator.centroid(d)})`)\n        //     .attr(\"dy\", \".35em\")\n        //     .text(d => d.properties.name)\n\n        return (\n            <svg id={id} width={width} height={height} >\n                {faux.toReact()}\n            </svg>\n        )\n    }\n}\n\nexport default Map","import React from 'react'\n\nconst MapsDescription = () => <div className=\"description\">\n    <p>\n        Die Visualisierung zeigt mit Hilfe von Karten der Schweiz die Entwicklung der Unfälle im Verlauf der letzten 24 Jahre (bis 2016) aufgesplittet nach Kantonen.\n        Dabei kann im Dropdown Menu gewechselt werden zwischen den relativen Werten \"Unfälle pro 1000 Fahrzeuge\" und den absoluten Werten \"Unfälle insgesamt\".\n        Zudem lässt die dritte Auswahlmöglichkeit \"Zugelassene Fahrzeuge\" einen Vergleich der Unfallsentwicklung zur Anzahl Fahrzeugen zu.\n        Beim hovern über die Schweizerkarten werden die Daten für den jeweiligen Kanton angezeigt.\n    </p>\n    <h4>Quellen</h4>\n    <ul className=\"sources\">\n        <li><a href=\"https://www.bfs.admin.ch/bfs/de/home/statistiken/kataloge-datenbanken/tabellen.assetdetail.4402685.html\" target=\"_blank\" rel=\"noopener noreferrer\">Strassenfahrzeugbestand: Motorfahrzeuge ab 1990</a>, Bundesamt für Statistik, abgerufen am 29. Mai 2018</li>\n        <li><a href=\"https://www.bfs.admin.ch/asset/de/px-x-1106010100_101\" target=\"_blank\" rel=\"noopener noreferrer\">Strassenverkehrsunfälle: Unfälle mit Personenschaden nach Kanton, Unfallschwere und Unfallort</a>, Bundesamt für Statistik, abgerufen am 22. Mai 2018</li>\n    </ul>\n</div>\n\n\nexport default MapsDescription","import React, { PureComponent } from 'react'\n\nimport './style.css'\n\nclass ColorLegend extends PureComponent {\n\n    render() {\n        const { color, domain, width, height } = this.props\n\n        const cols = Array(width).fill(0).map((x, y) => x + y)\n        const colorStep = 1 / width\n\n\n        const min = domain[0]\n        const max = domain[1]\n\n        const invert = domain[0] > domain[1]\n\n        return (\n            <div className=\"mapLegend\">\n                <span className=\"mapLegendMin\">{Number(invert ? max : min).toLocaleString()}</span>\n                <svg width={width} height={height} >\n                    {\n                        cols.map(col => <path key={`path${col}`} d={`M${col} 0 V ${height}`} stroke={`${color(invert ? 1 - col * colorStep : col * colorStep)}`} strokeWidth=\"2\" />)\n                    }\n                </svg>\n                <span className=\"mapLegendMax\">{Number(invert ? min : max).toLocaleString()}</span>\n            </div>\n        )\n    }\n}\n\nexport default ColorLegend","import React, { Component } from 'react'\nimport * as d3 from 'd3'\nimport './style.css'\n\nimport Map from '../../Components/Map'\nimport MapsDescription from '../../Components/MapsDescription'\nimport ColorLegend from '../../Components/ColorLegend'\n\nclass MapsVisualisation extends Component {\n    static defaultProps = {\n        paths: {\n            topo: `${process.env.PUBLIC_URL}/readme-swiss.json`,\n            relative: `${process.env.PUBLIC_URL}/crashes-canton-relative.csv`,\n            absolute: `${process.env.PUBLIC_URL}/crashes-canton-absolute.csv`,\n            amount: `${process.env.PUBLIC_URL}/amount-canton-absolute.csv`,\n        },\n        domains: {\n            relative: [12, 0],\n            absolute: [0, 4000],\n            amount: [0, 1000000],\n        },\n        scales: {\n            relative: d3.scaleLinear().domain([12, 0]).range([0, 1]),\n            absolute: d3.scaleLinear().domain([0, 4000]).range([0, 1]),\n            amount: d3.scaleLinear().domain([0, 1000000]).range([0, 1]),\n        },\n        colors: {\n            relative: d3.interpolateRdYlBu,\n            absolute: d3.interpolateReds,\n            amount: d3.interpolatePurples,\n        }\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            country: null,\n            data: null,\n            selectedDataset: 'relative',\n            loading: false,\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    componentDidMount() {\n        this.loadDataset('relative')\n\n        d3.json(this.props.paths.topo)\n            .then(country => {\n                this.setState({ country: country })\n            })\n    }\n\n    loadDataset(selectedDataset) {\n        this.setState({ data: null, loading: true, })\n        d3.csv(this.props.paths[selectedDataset])\n            .then(data => {\n                this.setState({ selectedDataset: selectedDataset, data: data, loading: false, })\n            })\n    }\n\n    handleChange(event) {\n        this.loadDataset(event.target.value)\n    }\n\n    render() {\n        const { id, className, scales, colors, domains } = this.props\n        const { country, data, selectedDataset, loading } = this.state\n        let cantonMap = {}\n\n        if (null != data) {\n            for (let i = 0; i < data.length; ++i) {\n                cantonMap[data[i].Kanton] = i\n            }\n        }\n\n        const years = Array(2016 - 1993 + 1).fill(1993).map((x, y) => x + y)\n\n        return (\n            <div id={id} className={className}>\n\n                <h2>Entwicklung der Unfallzahlen</h2>\n\n                <form className=\"selection-area\" onChange={this.handleChange}>\n                    <div className=\"selection-group\">\n                        <h3 className=\"selection-group-title\">Daten auswählen</h3>\n                        <select className=\"selection-items\" name=\"map-selection\" defaultValue=\"relative\">\n                            <option className=\"item\" value=\"relative\">Unfälle pro 1000 Fahrzeuge</option>\n                            <option className=\"item\" value=\"absolute\">Unfälle insgesamt</option>\n                            <option className=\"item\" value=\"amount\">Zugelassene Fahrzeuge</option>\n                        </select>\n                    </div>\n                </form>\n\n                <div className=\"maps\">\n                    {loading && <div className=\"mapLoading\"><div>Visualisierung wird geladen</div></div>}\n                    {null != country && <div className=\"mapsContainer\">\n                        {years.map(year => <div className=\"map\" key={`map_${year}`}>\n                            <div className=\"mapTitle\">{year}</div>\n                            <Map\n                                id={`map${year}`}\n                                country={country}\n                                year={year}\n                                data={data}\n                                cantonMap={cantonMap}\n                                color={colors[selectedDataset]}\n                                scale={scales[selectedDataset]}\n                                width=\"182\"\n                                height=\"110\" />\n                        </div>)}\n                    </div>}\n                </div>\n\n                <ColorLegend color={colors[selectedDataset]} domain={domains[selectedDataset]} width={200} height={16} />\n\n                <MapsDescription/>\n            </div>\n        )\n    }\n\n}\n\nexport default MapsVisualisation","import React, { Component } from 'react'\nimport './App.css'\n\nimport Visualization2 from './Components/Visualization2'\nimport MapsVisualisation from './Components/MapsVisualisation'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Strassenverkehrsunfälle in der Schweiz</h1>\n        </header>\n        <div className=\"inner\">\n          <MapsVisualisation className=\"container\" id=\"visualization1\" />\n          <hr className=\"divider\"/>\n          <Visualization2 />\n        </div>\n        <div id=\"mapTooltip\" className=\"tooltip\" />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nregisterServiceWorker()\n"],"sourceRoot":""}